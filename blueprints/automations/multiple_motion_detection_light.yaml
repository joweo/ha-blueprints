blueprint:
  name: Simple Motion Light Controller
  description: Controls lights based on motion and brightness with just two action blocks
  domain: automation
  input:
    motion_sensors:
      name: Motion Sensors
      description: Select the motion sensors that will trigger the actions
      selector:
        entity:
          domain: binary_sensor
          multiple: true
    light_sensor:
      name: Light Sensor
      description: Select the sensor that measures brightness
      selector:
        entity:
          domain: sensor
    lux_threshold:
      name: Lux Threshold
      description: Brightness level below which the lights should be activated
      default: 10
      selector:
        number:
          min: 1
          max: 200
    turn_off_delay:
      name: Turn Off Delay
      description: Seconds to wait before turning off after motion stops
      default: 60
      selector:
        number:
          min: 1
          max: 3600
          step: 1
          unit_of_measurement: seconds
    action_lights_on:
      name: Action - Turn Lights On
      description: Action to run when motion is detected AND it's dark
      selector:
        action: {}
    action_lights_off:
      name: Action - Turn Lights Off
      description: Action to run when it becomes bright OR no motion is detected anymore (after delay)
      selector:
        action: {}

trigger:
  - platform: state
    entity_id: !input motion_sensors
    to: "on"
  - platform: numeric_state
    entity_id: !input light_sensor
    below: !input lux_threshold
  - platform: numeric_state
    entity_id: !input light_sensor
    above: !input lux_threshold

action:
  - choose:
      # Case 1: It's dark AND there is motion - Turn lights ON
      - conditions:
          - condition: numeric_state
            entity_id: !input light_sensor
            below: !input lux_threshold
          - condition: or
            conditions:
              - condition: state
                entity_id: !input motion_sensors
                state: "on"
        sequence:
          - event: motion_sensor_event
            event_data:
              action: lights_on
              lux: "{{ states(light_sensor) }}"
          - choose:
              - conditions: []
                sequence: !input action_lights_on
          # Wait until either no motion OR it becomes bright
          - wait_for_trigger:
              - platform: state
                entity_id: !input motion_sensors
                from: "on"
                to: "off"
                for:
                  seconds: !input turn_off_delay
              - platform: numeric_state
                entity_id: !input light_sensor
                above: !input lux_threshold
          # Execute the lights off action
          - event: motion_sensor_event
            event_data:
              action: lights_off
              lux: "{{ states(light_sensor) }}"
          - choose:
              - conditions: []
                sequence: !input action_lights_off
      
      # Case 2: It becomes bright - Turn lights OFF
      - conditions:
          - condition: numeric_state
            entity_id: !input light_sensor
            above: !input lux_threshold
        sequence:
          - event: motion_sensor_event
            event_data:
              action: lights_off
              lux: "{{ states(light_sensor) }}"
          - choose:
              - conditions: []
                sequence: !input action_lights_off

mode: restart